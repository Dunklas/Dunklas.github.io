<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on</title><link>https://dunklas.github.io/posts/</link><description>Recent content in Posts on</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 01 Jun 2023 07:31:20 +0200</lastBuildDate><atom:link href="https://dunklas.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>A Structured Approach to Work With Software Development Tasks</title><link>https://dunklas.github.io/posts/structured-approach-to-sw-tasks/</link><pubDate>Thu, 01 Jun 2023 07:31:20 +0200</pubDate><guid>https://dunklas.github.io/posts/structured-approach-to-sw-tasks/</guid><description>&lt;p>Sometimes I see people (myself included) working on software development tasks in a non-structured way.
You might have a vague understanding of what you&amp;rsquo;re about to accomplish.
Aimlessly traversing the code base, hoping to find places that you might need to change.
You instantly start to chase new ideas, while forgetting about prior (and possibly important) ideas.
It might be hard to determine when you&amp;rsquo;re done.
You might not commit intermediary working states, and have a hard time finding what you&amp;rsquo;ve messed up once something is broken.&lt;/p></description></item><item><title>Learnings from debugging a misconfigured service worker</title><link>https://dunklas.github.io/posts/coding/service-worker-debugging/</link><pubDate>Fri, 17 Feb 2023 00:00:00 +0000</pubDate><guid>https://dunklas.github.io/posts/coding/service-worker-debugging/</guid><description>&lt;p>Recently I worked on a task related to a misconfigured service worker in a &lt;a href="https://developer.mozilla.org/en-US/docs/Glossary/SPA">SPA (single page application)&lt;/a>.
The issue was that cache invalidation of application configuration didn&amp;rsquo;t work as expected.
If a configuration value was updated, the clients kept using an old value, served by a cached version of the configuration file.
This task was among the oldest ones in our backlog.
When the issue first was discovered, a temporary fix was applied, by renaming the configuration file itself.
After that, the task of actually resolving the problem has just been hanging around in the backlog for a very long time.&lt;/p></description></item><item><title>Why you should keep a developer diary</title><link>https://dunklas.github.io/posts/why-dev-diary/</link><pubDate>Thu, 25 Aug 2022 05:33:00 +0000</pubDate><guid>https://dunklas.github.io/posts/why-dev-diary/</guid><description>&lt;p>Every software developer should keep a diary.&lt;/p>
&lt;p>Personally I&amp;rsquo;ve kept one for about a year now, and I&amp;rsquo;m very content.
During some periods I haven&amp;rsquo;t bothered, and that&amp;rsquo;s OK.
I can always write a new entry tomorrow, or next week.&lt;/p>
&lt;p>The diary can cover a lot of different aspects from your daily work.
Below are some examples.&lt;/p>
&lt;ul>
&lt;li>Things you&amp;rsquo;ve learned&lt;/li>
&lt;li>Accomplishments that you&amp;rsquo;re proud of&lt;/li>
&lt;li>Thoughts on dynamics within your team&lt;/li>
&lt;li>Sketches of ideas&lt;/li>
&lt;li>Reasoning behind technical decisions&lt;/li>
&lt;li>Solutions to problems that you&amp;rsquo;ve struggled with&lt;/li>
&lt;/ul>
&lt;p>I think the greatest benefit of writing a diary is that you give yourself time to reflect on your daily work.
You will think about things that works less well and identify improvements for both yourself and your team.
Sometimes we feel that we&amp;rsquo;re just standing still, not developing as individuals.
By reflecting on accomplishments and things you&amp;rsquo;ve learned you can more clearly see that you&amp;rsquo;re actually growing as an individual, every day.
You might reflect a lot already without writing anything about it.
That&amp;rsquo;s great, but your brain might not be the most suitable storage solution in the long-term.
Additionally, when writing thoughts or solutions related to different problems, you&amp;rsquo;ll get a personal knowledge base.
If you encounter the same issue again, you can always re-visit your old diary entries.&lt;/p></description></item><item><title>Custom resources with AWS CDK</title><link>https://dunklas.github.io/posts/aws/custom_resources_cdk/</link><pubDate>Tue, 20 Apr 2021 05:21:00 +0000</pubDate><guid>https://dunklas.github.io/posts/aws/custom_resources_cdk/</guid><description>&lt;p>CloudFormation custom resources is a great way to extend the functionality of CloudFormation. With custom resources you can run any custom logic in response to stack events. Example of use cases could be to create resources which CloudFormation has no support for, make requests to some external (non AWS) API, or maybe something not related to infrastructure at all, such as running a suite of smoke tests or seeding a database.&lt;/p></description></item><item><title>Properties of functions</title><link>https://dunklas.github.io/posts/math/functions_properties/</link><pubDate>Sun, 18 Apr 2021 14:00:00 +0000</pubDate><guid>https://dunklas.github.io/posts/math/functions_properties/</guid><description>&lt;p>In a &lt;a href="https://dunklas.github.io/posts/math/functions_terminology/">previous post&lt;/a> I covered some basic terminology of functions in a mathematical context. In this post, I will continue and explain some properties that a function may or may not fulfill.&lt;/p>
&lt;h2 id="one-to-one">One-to-one&lt;/h2>
&lt;p>Consider a function $f: \mathbb{R} \rightarrow \mathbb{R}$ defined as $f(x) = x^2$. Note that $f$ can have an output value which has two different inverse images, e.g. $f(-3) = f(3) = 9$, but $-3 \ne 3$. This fact means that $f$ does &lt;strong>not&lt;/strong> satisfy the property of being &lt;em>one-to-one&lt;/em>, or &lt;em>injective&lt;/em>.
For a function to be one-to-one, the image of every element in the domain must be unique (no two input values produces the same output value). Symbolically the property can be stated as:
$$f: \mathbb{R} \rightarrow \mathbb{R} \text{ is one-to-one} \iff \forall{r_1,r_2} \in \mathbb{R}, f(r_1) = f(r_2) \rightarrow r_1 = r_2 $$&lt;/p></description></item><item><title>Terminology of functions</title><link>https://dunklas.github.io/posts/math/functions_terminology/</link><pubDate>Sat, 17 Apr 2021 13:00:00 +0000</pubDate><guid>https://dunklas.github.io/posts/math/functions_terminology/</guid><description>&lt;p>In my job as a software developer I work with functions everyday, however I don&amp;rsquo;t really have much experience with functions in a mathematical context. My aim with this post is to cover some terminology of functions in a mathematical context.&lt;/p>
&lt;hr>
&lt;p>A function is a process that relates every value in some set to a &lt;strong>single&lt;/strong> value in some set. For example, suppose that $S$ is the set of all strings. We can define a function $len: S \rightarrow \mathbb{Z}$ as $len(s) = \text{length of s}$. This function relates the value of $s \in S$ to the value of $\text{length of s} \in \mathbb{Z}$.&lt;/p></description></item><item><title>Independent events and conditional probability</title><link>https://dunklas.github.io/posts/math/conditional_probability/</link><pubDate>Mon, 15 Mar 2021 22:00:00 +0000</pubDate><guid>https://dunklas.github.io/posts/math/conditional_probability/</guid><description>&lt;p>In &lt;a href="https://dunklas.github.io/posts/math/probability/">Introduction to probability&lt;/a> it was described how to calculate the probability of some event. However, the post only considered the probability of a single event. What if we want to know the probability of two events?&lt;/p>
&lt;h2 id="independent-events">Independent events&lt;/h2>
&lt;p>Imagine (again) that you&amp;rsquo;re to randomly pick a studio album by Black Sabbath, where it&amp;rsquo;s equally likely that you pick any of the studio albums. But this time, consider a scenario where you&amp;rsquo;re to pick &lt;strong>two&lt;/strong> studio albums. Although, after you pick the first studio album you put it back in the pile, so it&amp;rsquo;s possible two pick the same studio album twice - What&amp;rsquo;s the probability that both of the albums you pick include Ronnie James Dio as vocalist?&lt;/p></description></item><item><title>Foundations of probability, and expected value</title><link>https://dunklas.github.io/posts/math/probability/</link><pubDate>Mon, 15 Mar 2021 20:00:00 +0000</pubDate><guid>https://dunklas.github.io/posts/math/probability/</guid><description>&lt;p>The idea of probability is to quantify how likely it is for some event to occur in some process or experiment. First, some definitions - The set of all possible outcomes in a process or experiment is refered to as a &lt;strong>sample space&lt;/strong>, while an &lt;strong>event&lt;/strong> is a subset of the sample space (i.e. one or more of the possible outcomes).&lt;/p>
&lt;p>Given that $S$ is a finite sample space with &lt;em>equally likely&lt;/em> outcomes, and that $E$ is an event in $S$, the probability of $E$, denoted $P(E)$ is defined as the number of desired outcomes divided by the total number of outcomes.
$$P(E) = \frac{|E|}{|S|}$$
Where $|E|$ indicates the number of elements in $E$, and $|S|$ indicates the number of elements in $S$.&lt;/p></description></item><item><title>Counting subsets using r-combinations</title><link>https://dunklas.github.io/posts/math/counting_subsets_with_combinations/</link><pubDate>Sun, 14 Mar 2021 00:00:00 +0000</pubDate><guid>https://dunklas.github.io/posts/math/counting_subsets_with_combinations/</guid><description>&lt;p>Below are some examples of counting subsets with certain restrictions, using the concept of combinations, &lt;a href="https://dunklas.github.io/posts/math/counting_elements_sets/#the-addition-rule">addition rule&lt;/a> and &lt;a href="https://dunklas.github.io/posts/math/counting_elements_sets/#the-difference-rule">difference rule&lt;/a>.&lt;/p>
&lt;p>Consider a scenario where, for the rest of your life, from the total of nineteen studio albums by Black Sabbath, you&amp;rsquo;re only allowed to listen to five of them. Without any restrictions to the selection, we can use 5-combinations to ascertain that the number of combinations you&amp;rsquo;d need to consider are:
$${19 \choose 5} = \frac{19!}{5!(19-5)!} = \frac{19!}{5!14!} = 11628$$
When adding some restrictions to the selection, we need to think a bit differently.&lt;/p></description></item><item><title>Combinations</title><link>https://dunklas.github.io/posts/math/combinations/</link><pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate><guid>https://dunklas.github.io/posts/math/combinations/</guid><description>&lt;p>In the area of combinatorics both combinations and permutations are central concepts. Both combinations and permutations relates to the selection of a number of elements from a set. What differentiates the concepts is whether the selection is ordered or not.
In this post, I cover some fundamentals of what combinations are and how to count the number of combinations of sets.&lt;/p>
&lt;h2 id="definition">Definition&lt;/h2>
&lt;p>&lt;strong>Combinations&lt;/strong> are &lt;em>unordered&lt;/em> selections of elements from a set. Consider the set $X = \{a, b, c\}$. If we want to select a combination of three elements from $X$, there is only one distinct selection that can be made. $$(a, b, c)$$
If the elements are selected in a different order, it&amp;rsquo;d be the same combination, $(a, b, c) = (b, c, a)$.&lt;/p></description></item><item><title>Counting number of elements in sets</title><link>https://dunklas.github.io/posts/math/counting_elements_sets/</link><pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate><guid>https://dunklas.github.io/posts/math/counting_elements_sets/</guid><description>&lt;p>Some counting problems can be solved by counting the number of elements in the result of a set operation, such as a union, difference or intersection. In below notes, the notation of $|A|$ is used for the number of elements (i.e. the cardinality ) of a set $A$.&lt;/p>
&lt;h2 id="the-addition-rule">The addition rule&lt;/h2>
&lt;p>The addition rule can be used for counting the number of elements in a union of mutually disjoint sets (mutually disjoint means that the sets have no elements in common).
Suppose a finite set $A$ equals the union of $k$ distinct mutually disjoint subsets $A_1,A_2,\ldots,A_n$, then
$$|A| = |A_1| + |A_2| + \ldots + |A_n|$$&lt;/p></description></item><item><title>Permutations</title><link>https://dunklas.github.io/posts/math/permutations/</link><pubDate>Thu, 11 Mar 2021 00:00:00 +0000</pubDate><guid>https://dunklas.github.io/posts/math/permutations/</guid><description>&lt;p>In the area of combinatorics both combinations and permutations are central concepts. Both combinations and permutations relates to the selection of a number of elements from a set. What differentiates the concepts is whether the selection is ordered or not.
In this post, I cover some fundamentals of what permutations are and how to count the number of permutations of sets.&lt;/p>
&lt;h2 id="definition">Definition&lt;/h2>
&lt;p>In contrast to combinations, &lt;strong>permutations&lt;/strong> are &lt;em>ordered&lt;/em> selections of elements from a set. Consider the set $X = \{a, b, c\}$. The set has three elements and it&amp;rsquo;s possible to order them in six different ways. These are the permutations of $X$.
$$(a, b, c), (a, c, b), (b, a, c), (b, c, a), (c, a, b), (c, b, a)$$&lt;/p></description></item></channel></rss>